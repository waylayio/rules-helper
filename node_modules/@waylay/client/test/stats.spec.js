/* eslint-env jest */

const Url = require('url')
const moxios = require('moxios')
const Waylay = require('../index')

const waylay = new Waylay({ token: 'a-test-token' })

beforeEach(() => moxios.install(waylay.httpClient))
afterEach(() => moxios.uninstall())

test('list', (done) => {
  waylay.stats.getMetrics()

  moxios.wait(() => {
    const { config, url } = moxios.requests.mostRecent()

    expect(config).toMatchObject({ method: 'get' })
    expect(Url.parse(url)).toMatchObject({
      protocol: 'https:',
      host: 'stats.waylay.io',
      path: `/metrics`
    })
    done()
  })
})
test('list with params', (done) => {
  waylay.stats.getMetrics({ from: '1970-1-1' })

  moxios.wait(() => {
    const { config, url } = moxios.requests.mostRecent()

    expect(config).toMatchObject({ method: 'get' })
    expect(Url.parse(url)).toMatchObject({
      protocol: 'https:',
      host: 'stats.waylay.io',
      path: `/metrics?from=1970-1-1`
    })
    done()
  })
})
test('get one', (done) => {
  waylay.stats.getMetric('my-metric')

  moxios.wait(() => {
    const { config, url } = moxios.requests.mostRecent()

    expect(config).toMatchObject({ method: 'get' })
    expect(Url.parse(url)).toMatchObject({
      protocol: 'https:',
      host: 'stats.waylay.io',
      path: `/metrics/my-metric`
    })
    done()
  })
})
test('get one with params', (done) => {
  waylay.stats.getMetric('my-metric', { from: '1970-1-1' })

  moxios.wait(() => {
    const { config, url } = moxios.requests.mostRecent()

    expect(config).toMatchObject({ method: 'get' })
    expect(Url.parse(url)).toMatchObject({
      protocol: 'https:',
      host: 'stats.waylay.io',
      path: `/metrics/my-metric?from=1970-1-1`
    })
    done()
  })
})
