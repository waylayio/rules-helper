/* eslint-env jest */

const Url = require('url')
const moxios = require('moxios')
const Waylay = require('../index')

const waylay = new Waylay({
  token: 'a-test-token',
  domain: 'my-domain.waylay.io'
})

beforeEach(() => moxios.install(waylay.httpClient))
afterEach(() => moxios.uninstall())

test('list', done => {
  waylay.organisationSettings.list()

  moxios.wait(() => {
    const req = moxios.requests.mostRecent()

    expect(Url.parse(req.url)).toMatchObject({
      protocol: 'https:',
      host: 'my-domain.waylay.io',
      path: `/api/settings`
    })

    done()
  })
})

test('set', done => {
  const value = 'testing123'
  const key = 'my-secret'

  waylay.organisationSettings.set(key, value)

  moxios.wait(() => {
    const { config, url } = moxios.requests.mostRecent()

    expect(config).toMatchObject({
      method: 'post',
      data: JSON.stringify({ [key]: value })
    })

    expect(config.headers).toHaveProperty('Content-Type', 'application/json')

    expect(Url.parse(url)).toMatchObject({
      protocol: 'https:',
      host: 'my-domain.waylay.io',
      path: `/api/settings`
    })

    done()
  })
})

test('remove', done => {
  const key = 'my-secret'
  waylay.organisationSettings.remove(key)

  moxios.wait(() => {
    const { config, url } = moxios.requests.mostRecent()

    expect(config).toMatchObject({ method: 'delete' })
    expect(Url.parse(url)).toMatchObject({
      protocol: 'https:',
      host: 'my-domain.waylay.io',
      path: `/api/settings/${encodeURIComponent(key)}`
    })

    done()
  })
})
