/* eslint-env jest */

const util = require('../lib/util')

test('wantsLatestVersion', () => {
  expect(util.wantsLatestVersion()).toBe(true)
  expect(util.wantsLatestVersion(undefined)).toBe(true)
  expect(util.wantsLatestVersion(null)).toBe(true)
  expect(util.wantsLatestVersion('')).toBe(true)
  expect(util.wantsLatestVersion('*')).toBe(true)
  expect(util.wantsLatestVersion('latest')).toBe(true)

  expect(util.wantsLatestVersion('1.0.0')).toBe(false)
  expect(util.wantsLatestVersion('v1.5.3-beta')).toBe(false)
})

test.each([
  ['test123', 'text/plain'],
  [{ foo: 'bar' }, 'application/json'],
  [Buffer.from('test123', 'utf8'), 'application/octet-stream'],
  [new Uint8Array(1, 2, 3), 'application/octet-stream'],
  [Uint16Array.from('123'), 'application/octet-stream']
])('getMime(%o, %s)', (value, expected) => {
  expect(util.getMime(value)).toBe(expected)
})

test('getMime(undefined)', () => {
  expect(() => {
    util.getMime()
  }).toThrowErrorMatchingSnapshot()
})

test('token has expired', () => {
  const expiredToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjB9.iDIH0zPWlHfdYWnKOH6P5I0y-95tazAHiIdL2Kan1iQ'
  // this token will expire in the year 2100, if you are reading this and this test suite is still being used you can blame me
  // but I will most likely already be dead
  const nonExpiredToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjQxMTAxODY3NTh9.XM3eDKhcgdzSdM7-r2AQMjP-HIk_ehi9fx4S3QpuaDw'
  expect(util.tokenHasExpired(expiredToken)).toBe(true)
  expect(util.tokenHasExpired(nonExpiredToken)).toBe(false)
})
