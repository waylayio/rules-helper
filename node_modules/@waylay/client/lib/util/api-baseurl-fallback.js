const prependHttp = require('prepend-http')

/**
 * baseUrl abstraction to make sure that this entity
 * first falls back to the api/engine config
 */
function getBaseUrl () {
  const settingsKey = this._options.settingsBaseUrlKey

  // baseUrl has precedence over other configurations, even when it's undefined or ''
  const fromOptions = this._options.hasOwnProperty('baseUrl')
  if (fromOptions) {
    return this._options.baseUrl
      ? prependHttp(this._options.baseUrl, { https: true })
      : undefined
  }

  const fromGlobalSettings = settingsKey && this._client._settings && this._client._settings[settingsKey]
  const fromApi = this._client._settings && this._client._settings['waylay_api']
  const fromClient = this._client.baseUrl

  const baseUrl = fromGlobalSettings || fromApi || fromClient

  return baseUrl !== 'https://' ? prependHttp(baseUrl, { https: true }) : ''
}

function setBaseUrl (baseUrl) {
  this._options.baseUrl = baseUrl
}

module.exports = {
  getBaseUrl,
  setBaseUrl
}
