'use strict'

const Resource = require('./resource')

/**
 * @namespace
 */
class Templates extends Resource {
  /**
   * Create a new template
   *
   * See {@link https://docs.waylay.io/#/api/rules/#create-a-new-template}
   *
   * @param  {Template} template
   * @param  {Object} params
   * @return {Promise}
   */
  create (template, params) {
    return this._request({
      path: '/api/templates',
      method: 'POST',
      data: template,
      params
    })
  }

  /**
   * Update an existing template
   *
   * See {@link https://docs.waylay.io/#/api/rules/#update-a-template}
   *
   * @param  {string}   name
   * @param  {Template} template
   * @return {Promise}
   */
  update (name, template, params) {
    return this._request({
      path: `/api/templates/${name}`,
      method: 'PUT',
      data: template,
      params
    })
  }

  /**
   * List all templates with optional filter
   *
   * See {@link https://docs.waylay.io/#/api/rules/#list-all-templates}
   * @param  {string} [filter]
   * @param  {Object} params
   * @param  {Object} options
   * @return {Promise<Templates[]>}
   */
  list (filter, params, options) {
    // function overloading: list(params, options)
    if (typeof filter === 'object') {
      options = params
      params = filter
      filter = undefined
    }

    if (typeof filter === 'string') params = { ...params, filter }

    return this._request({
      path: '/api/templates',
      params,
      ...options
    })
  }

  /**
   * Retrieve details of a template
   * @param  {string} name
   * @param  {Object} params
   * @return {Promise}
   */
  get (name, params = {}) {
    return this._request({
      path: `/api/templates/${name}`,
      params
    })
  }

  /**
   * Remove a template
   * @param  {string} id
   * @return {Promise}
   */
  remove (id) {
    return this._request({
      path: `/api/templates/${id}`,
      method: 'DELETE'
    })
  }

  /**
   * Get all variables used in a template
   * @param  {Object} graph
   * @return {Promise}
   */
  variables (graph) {
    return this._request({
      path: `/api/variableDeclarations`,
      method: 'POST',
      data: graph
    })
  }
}

module.exports = Templates
