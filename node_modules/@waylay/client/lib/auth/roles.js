const Resource = require('../resource')

/**
 * @namespace Roles
 */
class Roles extends Resource {
  /**
   * Get all roles from your tenant
   * @param {Object} params Additional querystring parameters
   * @return {Promise<Role[]>}
   */
  list (params) {
    return this._request({
      path: '/roles',
      params
    })
  }

  /**
   * Get a single role by id
   * @param  {string} id
   * @return {Promise<Role>}
   */
  get (id) {
    return this._request({
      path: `/roles/${id}`
    })
  }

  /**
   * Create a new role
   * @param  {Role} role
   * @return {Promise<Role>}
   */
  create (role) {
    return this._request({
      path: '/roles',
      method: 'POST',
      data: role
    })
  }

  /**
   * Update a role
   * @param  {string} id
   * @param  {Role} role
   * @return {Promise<Role>}
   */
  update (id, role) {
    return this._request({
      path: `/roles/${id}`,
      method: 'PUT',
      data: role
    })
  }

  /**
   * Delete a role
   * @param  {string} id
   * @return {Promise}
   */
  delete (id) {
    return this._request({
      path: `/roles/${id}`,
      method: 'DELETE'
    })
  }

  /**
   * Add a permission to a role
   * @param  {string} id Role id
   * @param  {string|Array<string>} permission Permission id
   * @return {Promise<Object>}
   */
  addPermission (id, permission) {
    return this._request({
      path: `/roles/${id}/permissions`,
      method: 'POST',
      data: { permissionId: permission }
    })
  }

  /**
   * Remove a permission from a role
   * @param  {string} id Role id
   * @param  {string} permission Permission id
   * @return {Promise<Object>}
   */
  removePermission (id, permissionId) {
    return this._request({
      path: `/roles/${id}/permissions/${permissionId}`,
      method: 'DELETE'
    })
  }

  /**
   * Assign a role to a user
   * @param  {string} id Role id
   * @param  {string} user User id
   * @param  {string} tenant Tenant id
   * @return {Promise<Object>}
   */
  addUser (id, user, tenant) {
    return this._request({
      path: `/roles/${id}/user`,
      method: 'POST',
      data: { userId: user, tenantId: tenant }
    })
  }

  /**
   * Remove a role from a user
   * @param  {string} id Role id
   * @param  {string} user User id
   * @param  {string} tenant Tenant id
   * @return {Promise<Object>}
   */
  removeUser (id, user, tenant) {
    return this._request({
      path: `/roles/${id}/user/${user}`,
      method: 'DELETE',
      params: { tenant }
    })
  }
}

module.exports = Roles
