const Resource = require('../resource')

/**
 * @namespace Users
 */
class Users extends Resource {
  /**
   * Get all users from your tenant
   * @param {Object} params Additional querystring parameters
   * @return {Promise<User[]>}
   */
  list (params) {
    return this._request({
      path: '/users',
      params
    })
  }

  /**
   * Get a single user by id
   * @param  {string} id
   * @return {Promise<User>}
   */
  get (id) {
    return this._request({
      path: `/users/${id}`
    })
  }

  /**
   * Create a new user
   * @param  {User} user
   * @return {Promise<User>}
   */
  create (user) {
    return this._request({
      path: '/users',
      method: 'POST',
      data: user
    })
  }

  /**
   * Update a user
   * @param  {string} id
   * @param  {User} user
   * @return {Promise<User>}
   */
  update (id, user) {
    return this._request({
      path: `/users/${id}`,
      method: 'PUT',
      data: user
    })
  }

  /**
   * Delete a user
   * @param  {string} id
   * @return {Promise}
   */
  delete (id) {
    return this._request({
      path: `/users/${id}`,
      method: 'DELETE'
    })
  }

  /**
   * Add a role to a user
   * @param  {string} id User id
   * @param  {string} role Role id
   * @param  {string} tenant Tenant id
   * @return {Promise<Object>}
   */
  addRole (id, role, tenant) {
    return this._request({
      path: `/roles/${role}/user`,
      method: 'POST',
      data: { userId: id, tenantId: tenant }
    })
  }

  /**
   * Remove a role from a user
   * @param  {string} id User id
   * @param  {string} role Role id
   * @param  {string} tenant Tenant id
   * @return {Promise<Object>}
   */
  removeRole (id, role, tenant) {
    return this._request({
      path: `/roles/${role}/user/${id}`,
      method: 'DELETE',
      params: { tenant }
    })
  }

  /**
  * Trigger the password reset flow for a user
  * @param  {string} id User id
  * @return {Promise<string>}
  */
  resetPassword (id) {
    return this._request({
      path: `/password/forgot`,
      method: 'POST',
      data: { userId: id }
    })
  }
}

module.exports = Users
